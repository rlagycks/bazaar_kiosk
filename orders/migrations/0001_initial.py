# Generated by Django 5.2.6 on 2025-09-11 06:18

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MenuCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('sort_order', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['sort_order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_type', models.CharField(choices=[('DINE_IN', '매장'), ('TAKEOUT', '포장'), ('BOOTH', '부스')], max_length=16)),
                ('status', models.CharField(choices=[('PREPARING', '준비중'), ('READY', '준비완료'), ('PACKED', '포장완료')], default='PREPARING', max_length=16)),
                ('source', models.CharField(choices=[('SERVE', '홀서빙'), ('COUNTER', '카운터'), ('BOOTH', '야외부스')], max_length=16)),
                ('pickup_no', models.PositiveIntegerField(blank=True, help_text='포장/부스 호출 번호(일자별 증가 예정).', null=True)),
                ('note', models.CharField(blank=True, max_length=200)),
                ('total_price', models.PositiveIntegerField(default=0, help_text='합계 금액(원). 캐시 필드.')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(help_text='테이블 번호(홀 서빙용).', unique=True)),
                ('name', models.CharField(blank=True, help_text='테이블 별칭(선택).', max_length=50)),
                ('is_active', models.BooleanField(default=True, help_text='활성 테이블 여부.')),
            ],
            options={
                'verbose_name': 'Table',
                'verbose_name_plural': 'Tables',
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.PositiveIntegerField(help_text='가격(원). MVP는 int로 저장. 추후 Decimal로 변경 예정.')),
                ('is_active', models.BooleanField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='items', to='orders.menucategory')),
            ],
            options={
                'ordering': ['category__sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.PositiveIntegerField(default=1)),
                ('unit_price', models.PositiveIntegerField(help_text='단가(원). 기본값은 등록 시점의 메뉴 가격.')),
                ('line_total', models.PositiveIntegerField(default=0)),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='orders.menuitem')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='order',
            name='table',
            field=models.ForeignKey(blank=True, help_text='DINE_IN에서만 사용. 그 외 타입은 비워두세요.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='orders.table'),
        ),
        migrations.AddIndex(
            model_name='menuitem',
            index=models.Index(fields=['is_active'], name='orders_menu_is_acti_9de2c1_idx'),
        ),
        migrations.AddIndex(
            model_name='menuitem',
            index=models.Index(fields=['category', 'is_active', 'name'], name='orders_menu_categor_10d346_idx'),
        ),
        migrations.AddIndex(
            model_name='orderitem',
            index=models.Index(fields=['order', 'menu_item'], name='orders_orde_order_i_5d7cf8_idx'),
        ),
        migrations.AddIndex(
            model_name='orderitem',
            index=models.Index(fields=['order', 'id'], name='orders_orde_order_i_5dc17d_idx'),
        ),
        migrations.AddConstraint(
            model_name='orderitem',
            constraint=models.CheckConstraint(condition=models.Q(('qty__gt', 0)), name='orders_orderitem_qty_gt_0'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['order_type', 'created_at'], name='orders_orde_order_t_341304_idx'),
        ),
        migrations.AddConstraint(
            model_name='order',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('order_type', 'DINE_IN'), ('table__isnull', False)), models.Q(models.Q(('order_type', 'DINE_IN'), _negated=True), ('table__isnull', True)), _connector='OR'), name='orders_order_table_required_for_dinein'),
        ),
    ]
